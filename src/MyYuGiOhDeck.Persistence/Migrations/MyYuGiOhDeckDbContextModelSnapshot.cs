// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyYuGiOhDeck.Persistence.Context;

namespace MyYuGiOhDeck.Persistence.Migrations
{
    [DbContext(typeof(MyYuGiOhDeckDbContext))]
    partial class MyYuGiOhDeckDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyYuGiOhDeck.Domain.Entities.MonsterCard", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Archetype");

                    b.Property<int>("Attack");

                    b.Property<string>("Attribute");

                    b.Property<int>("Defence");

                    b.Property<string>("Description");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("ImageUrl");

                    b.Property<string>("ImageUrlSmall");

                    b.Property<int>("Level");

                    b.Property<string>("Name");

                    b.Property<string>("Race");

                    b.Property<string>("SetTag");

                    b.Property<string>("Setcode");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("MonsterCard");

                    b.HasDiscriminator<string>("Discriminator").HasValue("MonsterCard");
                });

            modelBuilder.Entity("MyYuGiOhDeck.Domain.Entities.SpellTrapCard", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Archetype")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(300);

                    b.Property<string>("ImageUrlSmall")
                        .HasMaxLength(300);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Race")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("SetTag")
                        .HasMaxLength(200);

                    b.Property<string>("Setcode")
                        .HasMaxLength(300);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("SpellandTrapCard");
                });

            modelBuilder.Entity("MyYuGiOhDeck.Domain.Entities.LinkMonsterCard", b =>
                {
                    b.HasBaseType("MyYuGiOhDeck.Domain.Entities.MonsterCard");

                    b.Property<string>("Linkmarkers");

                    b.Property<int>("Linkval");

                    b.ToTable("LinkMonsterCard");

                    b.HasDiscriminator().HasValue("LinkMonsterCard");
                });

            modelBuilder.Entity("MyYuGiOhDeck.Domain.Entities.PendulumMonsterCard", b =>
                {
                    b.HasBaseType("MyYuGiOhDeck.Domain.Entities.MonsterCard");

                    b.Property<int>("Scale");

                    b.ToTable("PendulumMonsterCard");

                    b.HasDiscriminator().HasValue("PendulumMonsterCard");
                });
#pragma warning restore 612, 618
        }
    }
}
